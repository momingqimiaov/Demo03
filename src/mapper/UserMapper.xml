<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.UserMapper">
    <resultMap id="BaseResultMap" type="model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userName" property="username" jdbcType="CHAR"/>
        <result column="password" property="password" jdbcType="CHAR"/>
        <result column="aboutUser" property="aboutuser" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, userName, password, aboutUser
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from users
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="model.User">
    insert into users (id, userName, password, aboutUser)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, #{password,jdbcType=CHAR}, #{aboutuser,jdbcType=CHAR})
  </insert>
    <insert id="insertSelective" parameterType="model.User">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="aboutuser != null">
                aboutUser,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=CHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=CHAR},
            </if>
            <if test="aboutuser != null">
                #{aboutuser,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="model.User">
        update users
        <set>
            <if test="username != null">
                userName = #{username,jdbcType=CHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=CHAR},
            </if>
            <if test="aboutuser != null">
                aboutUser = #{aboutuser,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="model.User">
    update users
    set userName = #{username,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      aboutUser = #{aboutuser,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getAllUserList" resultType="User">
        select * from users
    </select>


    <select id="getUserByName" parameterType="String" resultType="User">
        select * from users where userName=#{userName}
    </select>


</mapper>