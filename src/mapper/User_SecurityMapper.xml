<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.User_SecurityMapper">
    <resultMap id="BaseResultMap" type="model.User_Security">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userId" property="userid" jdbcType="INTEGER"/>
        <result column="userSecurity" property="usersecurity" jdbcType="CHAR"/>
        <result column="securityId" property="securityid" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, userId, userSecurity, securityId
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_security
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user_security
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="model.User_Security">
        insert into user_security (id, userId, userSecurity,
        securityId)
        values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{usersecurity,jdbcType=CHAR},
        #{securityid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="model.User_Security">
        insert into user_security
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="usersecurity != null">
                userSecurity,
            </if>
            <if test="securityid != null">
                securityId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="usersecurity != null">
                #{usersecurity,jdbcType=CHAR},
            </if>
            <if test="securityid != null">
                #{securityid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="model.User_Security">
        update user_security
        <set>
            <if test="userid != null">
                userId = #{userid,jdbcType=INTEGER},
            </if>
            <if test="usersecurity != null">
                userSecurity = #{usersecurity,jdbcType=CHAR},
            </if>
            <if test="securityid != null">
                securityId = #{securityid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="model.User_Security">
        update user_security
        set userId = #{userid,jdbcType=INTEGER},
        userSecurity = #{usersecurity,jdbcType=CHAR},
        securityId = #{securityid,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deletUserSecurityByUserId" parameterType="java.lang.Integer">
        DELETE FROM user_security WHERE userId=#{userId}
    </delete>

    <select id="getSecurityNameByUserId" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT userSecurity FROM user_security WHERE userId=#{userId}
    </select>

    <select id="getUserSecurityBySecurityID" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT userSecurity FROM user_security WHERE securityId=#{securityId}
    </select>

    <delete id="deletUserSecurityBySecurityID" parameterType="java.lang.Integer">
        DELETE FROM user_security WHERE securityId=#{securityId}
    </delete>

    <update id="upDateSecurityNameBySecurityId" parameterType="UserSecurity">
    UPDATE user_security SET userSecurity=userSecurity=#{usersecurity} where securityId=#{securityid}
    </update>
    <delete id="deleteUserSecurity" parameterType="UserSecurity">
        delete from user_security where userId = #{userid,jdbcType=INTEGER} and securityId=#{securityid,jdbcType=INTEGER}
    </delete>
</mapper>