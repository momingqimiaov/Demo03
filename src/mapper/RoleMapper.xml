<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.RoleMapper">
    <resultMap id="BaseResultMap" type="model.Role">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="rolename" property="rolename" jdbcType="CHAR"/>
        <result column="aboutRole" property="aboutrole" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, rolename, aboutRole
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from roles
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from roles
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="model.Role">
        insert into roles (id, rolename, aboutRole
        )
        values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=CHAR}, #{aboutrole,jdbcType=CHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="model.Role">
        insert into roles
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="rolename != null">
                rolename,
            </if>
            <if test="aboutrole != null">
                aboutRole,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="rolename != null">
                #{rolename,jdbcType=CHAR},
            </if>
            <if test="aboutrole != null">
                #{aboutrole,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="model.Role">
        update roles
        <set>
            <if test="rolename != null">
                rolename = #{rolename,jdbcType=CHAR},
            </if>
            <if test="aboutrole != null">
                aboutRole = #{aboutrole,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="model.Role">
        update roles
        set rolename = #{rolename,jdbcType=CHAR},
        aboutRole = #{aboutrole,jdbcType=CHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="getAllRoleList" resultType="Role">
        select * from roles
    </select>

    <select id="getRoleByName" parameterType="String" resultType="Role">
        select * from roles where rolename=#{rolename}
    </select>

    <select id="getAllRoleNameList" resultType="String">
        select rolename from roles
    </select>
    <select id="getIdByRoleName" resultType="Integer">
        select id from roles where rolename=#{rolename}
    </select>



</mapper>