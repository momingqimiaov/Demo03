<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.User_RoleMapper">
    <resultMap id="BaseResultMap" type="model.User_Role">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userId" property="userid" jdbcType="INTEGER"/>
        <result column="userRloe" property="userrloe" jdbcType="CHAR"/>
        <result column="roleId" property="roleid" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, userId, userRloe, roleId
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user_role
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="model.User_Role">
        insert into user_role (id, userId, userRloe,
        roleId)
        values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{userrloe,jdbcType=CHAR},
        #{roleid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="model.User_Role">
        insert into user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="userrloe != null">
                userRloe,
            </if>
            <if test="roleid != null">
                roleId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="userrloe != null">
                #{userrloe,jdbcType=CHAR},
            </if>
            <if test="roleid != null">
                #{roleid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="model.User_Role">
        update user_role
        <set>
            <if test="userid != null">
                userId = #{userid,jdbcType=INTEGER},
            </if>
            <if test="userrloe != null">
                userRloe = #{userrloe,jdbcType=CHAR},
            </if>
            <if test="roleid != null">
                roleId = #{roleid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="model.User_Role">
        update user_role
        set userId = #{userid,jdbcType=INTEGER},
        userRloe = #{userrloe,jdbcType=CHAR},
        roleId = #{roleid,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteUserRoleByUserId" parameterType="java.lang.Integer">
        DELETE FROM user_role WHERE userId=#{userId}
    </delete>

    <select id="getRoleNameByUserId" parameterType="java.lang.Integer" resultType="java.lang.String">
        select userRloe from user_role WHERE userId=#{userId};
    </select>

    <select id="getUserRoleByRoleName" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT userRloe FROM user_role WHERE userRloe=#{userRloe}
    </select>

    <delete id="deleteUserByRoleName" parameterType="java.lang.String">
        DELETE FROM user_role WHERE userRloe=#{userRloe}
    </delete>

    <update id="upDateRoleNameByRoleId" parameterType="model.UserRoleRole">
      UPDATE  user_role SET userRloe =#{role} WHERE roleId=#{roleId}
    </update>

    <delete id="deleteUserRole" parameterType="model.User_Role">
        delete from user_role where userId=#{userid,jdbcType=INTEGER} and roleId = #{roleid,jdbcType=INTEGER}
    </delete>
</mapper>